{"version":3,"file":"static/js/183.ece0788f.chunk.js","mappings":"kWAEaA,E,QAAkBC,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,8F,SCkBnCC,EAASC,EAAAA,KAAaC,MAAM,CAChCC,MAAOF,EAAAA,KAAaE,QAAQC,SAAS,YACrCC,SAAUJ,EAAAA,KAAaK,IAAI,EAAG,aAAaF,SAAS,cAGzCG,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAUC,EAAAA,EAAAA,IAAYC,EAAAA,IAEtBC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbZ,MAAO,GACPE,SAAU,IAEZW,iBAAkBhB,EAClBiB,SAAU,SAAAC,GACRV,GAASW,EAAAA,EAAAA,IAAMD,GACjB,IAUF,OAPAE,EAAAA,EAAAA,YAAU,WACJV,IACFW,EAAAA,GAAAA,MAAY,uCACZb,GAASc,EAAAA,EAAAA,OAEb,GAAG,CAACZ,EAASF,KAGXe,EAAAA,EAAAA,KAAC3B,EAAe,CAAA4B,UACdD,EAAAA,EAAAA,KAACE,EAAAA,EAAI,CAACC,MAAM,SAASC,QAAQ,SAASC,UAAU,MAAKJ,UACnDD,EAAAA,EAAAA,KAACM,EAAAA,GAAG,CAACC,GAAG,QAAQC,EAAG,EAAGC,QAAQ,KAAIR,UAChCD,EAAAA,EAAAA,KAAA,QAAMN,SAAUJ,EAAOoB,aAAaT,UAClCU,EAAAA,EAAAA,MAACC,EAAAA,EAAM,CAACC,QAAS,EAAGV,MAAM,aAAYF,SAAA,EACpCU,EAAAA,EAAAA,MAACG,EAAAA,GAAW,CACVC,UAAWzB,EAAO0B,QAAQpC,OAASU,EAAO2B,OAAOrC,MAAMqB,SAAA,EAEvDD,EAAAA,EAAAA,KAACkB,EAAAA,EAAS,CAACC,QAAQ,QAAOlB,SAAC,mBAC3BD,EAAAA,EAAAA,KAACoB,EAAAA,EAAK,CACJC,KAAK,QACLC,GAAG,QACHC,KAAK,QACLC,QAAQ,UACRC,SAAUnC,EAAOoC,aACjBC,MAAOrC,EAAOK,OAAOf,MACrBgD,OAAQtC,EAAOuC,cAEjB7B,EAAAA,EAAAA,KAAC8B,EAAAA,GAAgB,CAAA7B,SAAEX,EAAO2B,OAAOrC,YAEnC+B,EAAAA,EAAAA,MAACG,EAAAA,GAAW,CACVC,UAAWzB,EAAO0B,QAAQlC,UAAYQ,EAAO2B,OAAOnC,SAASmB,SAAA,EAE7DD,EAAAA,EAAAA,KAACkB,EAAAA,EAAS,CAACC,QAAQ,WAAUlB,SAAC,cAC9BD,EAAAA,EAAAA,KAACoB,EAAAA,EAAK,CACJE,GAAG,WACHD,KAAK,WACLE,KAAK,WACLC,QAAQ,UACRC,SAAUnC,EAAOoC,aACjBC,MAAOrC,EAAOK,OAAOb,SACrB8C,OAAQtC,EAAOuC,cAEjB7B,EAAAA,EAAAA,KAAC8B,EAAAA,GAAgB,CAAA7B,SAAEX,EAAO2B,OAAOnC,eAEnCkB,EAAAA,EAAAA,KAAC+B,EAAAA,EAAM,CACLR,KAAK,SACLS,MAAM,OACN3B,UAAU,IACV4B,MAAM,QACN1B,GAAG,QACH2B,SAAS,OACTC,WAAW,OAAMlC,SAClB,qBASf,EClGe,SAASmC,IACtB,OACEpC,EAAAA,EAAAA,KAAAqC,EAAAA,SAAA,CAAApC,UACED,EAAAA,EAAAA,KAAChB,EAAS,KAGhB,C","sources":["components/LoginForm/LoginFormStyled.js","components/LoginForm/LoginForm.js","pages/LoginPage.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledLoginPage = styled.div`\n  min-height: calc(100vh);\n  background: black;\n  color: white;\n  padding: 8px;\n`;\n","import * as Yup from 'yup';\nimport {\n  Box,\n  Button,\n  Flex,\n  FormControl,\n  FormErrorMessage,\n  FormLabel,\n  Input,\n  VStack,\n} from '@chakra-ui/react';\nimport { useFormik } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logIn } from '../../redux/auth/authOperations';\nimport { selectIsError } from '../../redux/auth/authSelector';\nimport { useEffect } from 'react';\nimport { resetError } from '../../redux/auth/authSlice';\nimport toast from 'react-hot-toast';\nimport { StyledLoginPage } from '../LoginForm/LoginFormStyled';\n\nconst schema = Yup.object().shape({\n  email: Yup.string().email().required('Required'),\n  password: Yup.string().min(7, 'Too short').required('Required'),\n});\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n  const isError = useSelector(selectIsError);\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    validationSchema: schema,\n    onSubmit: values => {\n      dispatch(logIn(values));\n    },\n  });\n\n  useEffect(() => {\n    if (isError) {\n      toast.error('Your email or password is incorrect');\n      dispatch(resetError());\n    }\n  }, [isError, dispatch]);\n\n  return (\n    <StyledLoginPage>\n      <Flex align=\"center\" justify=\"center\" marginTop=\"25%\">\n        <Box bg=\"black\" p={6} rounded=\"md\">\n          <form onSubmit={formik.handleSubmit}>\n            <VStack spacing={4} align=\"flex-start\">\n              <FormControl\n                isInvalid={formik.touched.email && formik.errors.email}\n              >\n                <FormLabel htmlFor=\"email\">Email Address</FormLabel>\n                <Input\n                  name=\"email\"\n                  id=\"email\"\n                  type=\"email\"\n                  variant=\"outline\"\n                  onChange={formik.handleChange}\n                  value={formik.values.email}\n                  onBlur={formik.handleBlur}\n                />\n                <FormErrorMessage>{formik.errors.email}</FormErrorMessage>\n              </FormControl>\n              <FormControl\n                isInvalid={formik.touched.password && formik.errors.password}\n              >\n                <FormLabel htmlFor=\"password\">Password</FormLabel>\n                <Input\n                  id=\"password\"\n                  name=\"password\"\n                  type=\"password\"\n                  variant=\"outline\"\n                  onChange={formik.handleChange}\n                  value={formik.values.password}\n                  onBlur={formik.handleBlur}\n                />\n                <FormErrorMessage>{formik.errors.password}</FormErrorMessage>\n              </FormControl>\n              <Button\n                type=\"submit\"\n                width=\"full\"\n                marginTop=\"4\"\n                color=\"black\"\n                bg=\"white\"\n                fontSize=\"18px\"\n                fontWeight=\"bold\"\n              >\n                LOG IN\n              </Button>\n            </VStack>\n          </form>\n        </Box>\n      </Flex>\n    </StyledLoginPage>\n  );\n};\n","import { LoginForm } from '../components/LoginForm/LoginForm';\n\nexport default function LoginPage() {\n  return (\n    <>\n      <LoginForm />\n    </>\n  );\n}\n"],"names":["StyledLoginPage","styled","_templateObject","_taggedTemplateLiteral","schema","Yup","shape","email","required","password","min","LoginForm","dispatch","useDispatch","isError","useSelector","selectIsError","formik","useFormik","initialValues","validationSchema","onSubmit","values","logIn","useEffect","toast","resetError","_jsx","children","Flex","align","justify","marginTop","Box","bg","p","rounded","handleSubmit","_jsxs","VStack","spacing","FormControl","isInvalid","touched","errors","FormLabel","htmlFor","Input","name","id","type","variant","onChange","handleChange","value","onBlur","handleBlur","FormErrorMessage","Button","width","color","fontSize","fontWeight","LoginPage","_Fragment"],"sourceRoot":""}