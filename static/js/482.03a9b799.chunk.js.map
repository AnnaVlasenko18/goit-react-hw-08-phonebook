{"version":3,"file":"static/js/482.03a9b799.chunk.js","mappings":"0WAoBMA,EAASC,EAAAA,KAAaC,MAAM,CAChCC,MAAOF,EAAAA,KAAaE,QAAQC,SAAS,YACrCC,SAAUJ,EAAAA,KAAaK,IAAI,EAAG,aAAaF,SAAS,cAGzCG,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAUC,EAAAA,EAAAA,IAAYC,EAAAA,IAEtBC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbZ,MAAO,GACPE,SAAU,IAEZW,iBAAkBhB,EAClBiB,SAAU,SAAAC,GACRV,GAASW,EAAAA,EAAAA,IAAMD,GACjB,IAUF,OAPAE,EAAAA,EAAAA,YAAU,WACJV,IACFW,EAAAA,GAAAA,MAAY,uCACZb,GAASc,EAAAA,EAAAA,OAEb,GAAG,CAACZ,EAASF,KAGXe,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAACC,MAAM,SAASC,QAAQ,SAASC,UAAU,MAAKC,UACnDL,EAAAA,EAAAA,KAACM,EAAAA,GAAG,CAACC,GAAG,QAAQC,EAAG,EAAGC,QAAQ,KAAIJ,UAChCL,EAAAA,EAAAA,KAAA,QAAMN,SAAUJ,EAAOoB,aAAaL,UAClCM,EAAAA,EAAAA,MAACC,EAAAA,EAAM,CAACC,QAAS,EAAGX,MAAM,aAAYG,SAAA,EACpCL,EAAAA,EAAAA,KAACc,EAAAA,EAAI,CACHC,SAAS,MACTC,WAAW,OACXC,YAAY,OACZC,WAAW,OAAMb,SAClB,WAGDM,EAAAA,EAAAA,MAACQ,EAAAA,GAAW,CACVC,UAAW9B,EAAO+B,QAAQzC,OAASU,EAAOgC,OAAO1C,MAAMyB,SAAA,EAEvDL,EAAAA,EAAAA,KAACuB,EAAAA,EAAS,CAACC,QAAQ,QAAOnB,SAAC,mBAC3BL,EAAAA,EAAAA,KAACyB,EAAAA,EAAK,CACJC,KAAK,QACLC,GAAG,QACHC,KAAK,QACLC,QAAQ,UACRC,SAAUxC,EAAOyC,aACjBC,MAAO1C,EAAOK,OAAOf,MACrBqD,OAAQ3C,EAAO4C,cAEjBlC,EAAAA,EAAAA,KAACmC,EAAAA,GAAgB,CAAA9B,SAAEf,EAAOgC,OAAO1C,YAEnC+B,EAAAA,EAAAA,MAACQ,EAAAA,GAAW,CACVC,UAAW9B,EAAO+B,QAAQvC,UAAYQ,EAAOgC,OAAOxC,SAASuB,SAAA,EAE7DL,EAAAA,EAAAA,KAACuB,EAAAA,EAAS,CAACC,QAAQ,WAAUnB,SAAC,cAC9BL,EAAAA,EAAAA,KAACyB,EAAAA,EAAK,CACJE,GAAG,WACHD,KAAK,WACLE,KAAK,WACLC,QAAQ,UACRC,SAAUxC,EAAOyC,aACjBC,MAAO1C,EAAOK,OAAOb,SACrBmD,OAAQ3C,EAAO4C,cAEjBlC,EAAAA,EAAAA,KAACmC,EAAAA,GAAgB,CAAA9B,SAAEf,EAAOgC,OAAOxC,eAEnCkB,EAAAA,EAAAA,KAACoC,EAAAA,EAAM,CACLR,KAAK,SACLS,YAAY,SACZC,MAAM,OACNlC,UAAU,IAAGC,SACd,oBAQb,ECrGe,SAASkC,IACtB,OACE5B,EAAAA,EAAAA,MAAA6B,EAAAA,SAAA,CAAAnC,SAAA,EACEL,EAAAA,EAAAA,KAAA,SAAAK,SAAO,WACPL,EAAAA,EAAAA,KAAChB,EAAS,MAGhB,C","sources":["components/LoginForm/LoginForm.js","pages/LoginPage.js"],"sourcesContent":["import * as Yup from 'yup';\nimport {\n  Box,\n  Button,\n  Flex,\n  FormControl,\n  FormErrorMessage,\n  FormLabel,\n  Input,\n  Text,\n  VStack,\n} from '@chakra-ui/react';\nimport { useFormik } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logIn } from '../../redux/auth/authOperations';\nimport { selectIsError } from '../../redux/auth/authSelector';\nimport { useEffect } from 'react';\nimport { resetError } from '../../redux/auth/authSlice';\nimport toast from 'react-hot-toast';\n\nconst schema = Yup.object().shape({\n  email: Yup.string().email().required('Required'),\n  password: Yup.string().min(7, 'Too short').required('Required'),\n});\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n  const isError = useSelector(selectIsError);\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    validationSchema: schema,\n    onSubmit: values => {\n      dispatch(logIn(values));\n    },\n  });\n\n  useEffect(() => {\n    if (isError) {\n      toast.error('Your email or password is incorrect');\n      dispatch(resetError());\n    }\n  }, [isError, dispatch]);\n\n  return (\n    <Flex align=\"center\" justify=\"center\" marginTop=\"10%\">\n      <Box bg=\"white\" p={6} rounded=\"md\">\n        <form onSubmit={formik.handleSubmit}>\n          <VStack spacing={4} align=\"flex-start\">\n            <Text\n              fontSize=\"2xl\"\n              fontWeight=\"bold\"\n              marginRight=\"auto\"\n              marginLeft=\"auto\"\n            >\n              Login\n            </Text>\n            <FormControl\n              isInvalid={formik.touched.email && formik.errors.email}\n            >\n              <FormLabel htmlFor=\"email\">Email Address</FormLabel>\n              <Input\n                name=\"email\"\n                id=\"email\"\n                type=\"email\"\n                variant=\"outline\"\n                onChange={formik.handleChange}\n                value={formik.values.email}\n                onBlur={formik.handleBlur}\n              />\n              <FormErrorMessage>{formik.errors.email}</FormErrorMessage>\n            </FormControl>\n            <FormControl\n              isInvalid={formik.touched.password && formik.errors.password}\n            >\n              <FormLabel htmlFor=\"password\">Password</FormLabel>\n              <Input\n                id=\"password\"\n                name=\"password\"\n                type=\"password\"\n                variant=\"outline\"\n                onChange={formik.handleChange}\n                value={formik.values.password}\n                onBlur={formik.handleBlur}\n              />\n              <FormErrorMessage>{formik.errors.password}</FormErrorMessage>\n            </FormControl>\n            <Button\n              type=\"submit\"\n              colorScheme=\"purple\"\n              width=\"full\"\n              marginTop=\"4\"\n            >\n              Sign In\n            </Button>\n          </VStack>\n        </form>\n      </Box>\n    </Flex>\n  );\n};\n","import { LoginForm } from '../components/LoginForm/LoginForm';\n\nexport default function LoginPage() {\n  return (\n    <>\n      <title>Login</title>\n      <LoginForm />\n    </>\n  );\n}\n"],"names":["schema","Yup","shape","email","required","password","min","LoginForm","dispatch","useDispatch","isError","useSelector","selectIsError","formik","useFormik","initialValues","validationSchema","onSubmit","values","logIn","useEffect","toast","resetError","_jsx","Flex","align","justify","marginTop","children","Box","bg","p","rounded","handleSubmit","_jsxs","VStack","spacing","Text","fontSize","fontWeight","marginRight","marginLeft","FormControl","isInvalid","touched","errors","FormLabel","htmlFor","Input","name","id","type","variant","onChange","handleChange","value","onBlur","handleBlur","FormErrorMessage","Button","colorScheme","width","LoginPage","_Fragment"],"sourceRoot":""}